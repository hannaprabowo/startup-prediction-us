health <- Health_systems
# change row names
health <- health[,-c(1:2)] # drop countries col
health <- na.omit(health)
new_row_names_column <- health$World_Bank_Name
health <- health[,-c(1)] # drop countries col
rownames(health) <- new_row_names_column # change row names
health <- scale(health)
d <- dist(health, method = "euclidean")
hc1 <- hclust(d, method = "average")
plot(hc1, cex = 0.6, hang = -1)
hc2 <- hclust(d, method = "single")
plot(hc2, cex = 0.6, hang = -1)
hc3 <- hclust(d, method = "complete")
plot(hc3, cex = 0.6, hang = -1)
hc4 <- hclust(d, method = "ward")
plot(hc4, cex = 0.6, hang = -1)
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
ac <- function(x) {
agnes(health, method = x)$ac
}
map_dbl(m, ac) # ward has the highest coefficient
hc_ward <- hclust(d, method = "ward.D2")
fviz_nbclust(health, FUN = hcut, method = "wss") # elbow rule
fviz_nbclust(health, FUN = hcut, method = "silhouette") # silhouette coefficient
# DUNNS index
library(fpc)
ward_clusters2 <- cutree(hc_ward, k = 2)
ward_clusters3 <- cutree(hc_ward, k = 3)
ward_clusters4 <- cutree(hc_ward, k = 4)
ward_2_dunns <- cluster.stats(d, ward_clusters2)
ward_3_dunns <- cluster.stats(d, ward_clusters3)
ward_4_dunns <- cluster.stats(d, ward_clusters4)
print(ward_2_dunns$dunn)
print(ward_3_dunns$dunn)
print(ward_4_dunns$dunn)
sub_grp1 <- cutree(hc_ward, k = 3)
table(sub_grp1)
plot(hc_ward, cex = 0.6)
rect.hclust(hc_ward, k = 3, border = 2:5)
fviz_cluster(list(data = health, cluster = sub_grp1))
# DIVISIVE CLUSTERING
hc_divisive <- diana(health)
hc_divisive$dc # amount of clustering structure found
pltree(hc_divisive, cex = 0.6, hang = -1, main = "Dendrogram for Divisive Clustering")
clustered_data <- data.frame(Cluster = sub_grp1, health)
result <- aggregate(. ~ Cluster, data = clustered_data, FUN = mean)
View(result)
health <- data.frame(health) # to unscale it
health <- health %>%
mutate(cluster = cutree(hc_ward, k=3)) # add column that indicates which obs in clusters
health %>% group_by(cluster) %>% summarise(n()) # to check number of observations in each cluster
health %>% group_by(cluster) %>% summarise_all(mean)
cluster.ward <- health %>%
dist() %>%
hclust(method="ward.D2")
library(lattice)
library(flexclust)
barchart(hc_ward, health, k = 3)
Health_systems <- read_csv("Documents/DSMA/Seminar DSMA/Presentation - Application KNN/Datasets/2.12_Health_systems.csv")
health <- Health_systems
# change row names
health <- health[,-c(1:2)] # drop countries col
health <- na.omit(health)
new_row_names_column <- health$World_Bank_Name
health <- health[,-c(1)] # drop countries col
rownames(health) <- new_row_names_column # change row names
health <- scale(health)
d <- dist(health, method = "euclidean")
hc1 <- hclust(d, method = "average")
plot(hc1, cex = 0.6, hang = -1)
hc2 <- hclust(d, method = "single")
plot(hc2, cex = 0.6, hang = -1)
hc3 <- hclust(d, method = "complete")
plot(hc3, cex = 0.6, hang = -1)
hc4 <- hclust(d, method = "ward")
plot(hc4, cex = 0.6, hang = -1)
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
ac <- function(x) {
agnes(health, method = x)$ac
}
map_dbl(m, ac) # ward has the highest coefficient
hc_ward <- hclust(d, method = "ward.D2")
fviz_nbclust(health, FUN = hcut, method = "wss") # elbow rule
fviz_nbclust(health, FUN = hcut, method = "silhouette") # silhouette coefficient
# this finds that we should either take 2 or 3 clusters with ward or complete linkage
# DUNNS index
library(fpc)
ward_clusters2 <- cutree(hc_ward, k = 2)
ward_clusters3 <- cutree(hc_ward, k = 3)
ward_clusters4 <- cutree(hc_ward, k = 4)
ward_2_dunns <- cluster.stats(d, ward_clusters2)
ward_3_dunns <- cluster.stats(d, ward_clusters3)
ward_4_dunns <- cluster.stats(d, ward_clusters4)
print(ward_2_dunns$dunn)
print(ward_3_dunns$dunn)
print(ward_4_dunns$dunn)
# take 3 clusters
sub_grp1 <- cutree(hc_ward, k = 3)
table(sub_grp1)
plot(hc_ward, cex = 0.6)
rect.hclust(hc_ward, k = 3, border = 2:5)
fviz_cluster(list(data = health, cluster = sub_grp1))
# DIVISIVE CLUSTERING
hc_divisive <- diana(health)
hc_divisive$dc # amount of clustering structure found
pltree(hc_divisive, cex = 0.6, hang = -1, main = "Dendrogram for Divisive Clustering")
##########################################
#########################################
# Means by group clusters
clustered_data <- data.frame(Cluster = sub_grp1, health)
result <- aggregate(. ~ Cluster, data = clustered_data, FUN = mean)
View(result)
##########################################
#########################################
#health <- data.frame(health) # to unscale it
#health <- health %>%
mutate(cluster = cutree(hc_ward, k=3)) # add column that indicates which obs in clusters
barchart(hc_ward, health, k = 3)
View(hc_ward)
View(Health_systems)
health <- data.frame(health) #revert back to unscaled
View(health)
health_ward_final <- health %>%
mutate(cluster = cutree(hc_ward, k=3))
health_ward_final
health_ward_final <- health %>%
mutate(cluster = cutree(hc_ward, k=3)) %>% group_by(cluster)
health_ward_final
View(health_ward_final)
health_ward_final <- health %>%
mutate(cluster = cutree(hc_ward, k=3))
health_ward_c1 <- subset(health_ward_final, select = cluster == 1)
health_ward_c1
View(health_ward_c1)
health_ward_c1 <- subset(health_ward_final, subset = cluster == 1)
View(health_ward_c1)
health_ward_c2 <- subset(health_ward_final, subset = cluster == 2)
health_ward_c3 <- subset(health_ward_final, subset = cluster == 3)
health_ward_c2
View(Health_systems)
new_column_names <- c("Health_exp_pctGDP", "Health_pctexp_public", "Health_pctexp_oop", "Health_exp_capita_USD",
"Capita_exp_PPP", "External_health_pctexp", "Physicians", "Nurse_midwife",
"Specialist_surgical", "Birth_registration", "Death_registration")
colnames(health) <- new_column_names
barchart(hc_ward, health, k = 3)
# ANOVA
## ANova
cluster_1_data <- health[sub_grp1 == 1, ]
cluster_2_data <- health[sub_grp1 == 2, ]
cluster_3_data <- health[sub_grp1 == 3, ]
# Health_exp_pctGDP
anova_result1 <- aov(Health_exp_pctGDP ~ sub_grp1, data = health)
summary(anova_result1)
# Health_pctexp_public
anova_result2 <- aov(Health_pctexp_public ~ sub_grp1, data = health)
summary(anova_result2)
# Health_pctexp_oop
anova_result3 <- aov(Health_pctexp_oop ~ sub_grp1, data = health)
summary(anova_result3)
# Health_exp_capita_USD
anova_result4 <- aov(Health_exp_capita_USD ~ sub_grp1, data = health)
summary(anova_result4)
# Capita_exp_PPP
anova_result5 <- aov(Capita_exp_PPP ~ sub_grp1, data = health)
summary(anova_result5)
# External_health_pctexp
anova_result6 <- aov(External_health_pctexp ~ sub_grp1, data = health)
summary(anova_result6)
# Physicians
anova_result7 <- aov(Physicians ~ sub_grp1, data = health)
summary(anova_result7)
# Nurse_midwife
anova_result8 <- aov(Nurse_midwife ~ sub_grp1, data = health)
summary(anova_result8)
# Specialist_surgical
anova_result9 <- aov(Specialist_surgical ~ sub_grp1, data = health)
summary(anova_result9)
# Birth_registration
anova_result10 <- aov(Birth_registration ~ sub_grp1, data = health)
summary(anova_result10)
# Death_registration
anova_result11 <- aov(Death_registration ~ sub_grp1, data = health)
summary(anova_result11)
# DIVISIVE CLUSTERING
hc_divisive <- diana(health)
hc_divisive$dc # amount of clustering structure found
pltree(hc_divisive, cex = 0.6, hang = -1, main = "Dendrogram for Divisive Clustering")
fviz_nbclust(health, FUN = hcut, method = "wss") # elbow rule
fviz_nbclust(health, FUN = hcut, method = "silhouette") # silhouette coefficient
fviz_nbclust(health, FUN = hcut, method = "wss") # elbow rule
fviz_nbclust(health, FUN = hcut, method = "silhouette") # silhouette coefficient
print(ward_2_dunns$dunn)
print(ward_3_dunns$dunn)
print(ward_4_dunns$dunn)
data.frame("2_clusters" = ward_2_dunns$dunn)
data.frame("2_clusters" = ward_2_dunns$dunn,
"3_clusters" = ward_3_dunns$dunn)
data.frame("2_clusters" = ward_2_dunns$dunn,
"3_clusters" = ward_3_dunns$dunn,
"4_clusters" = ward_4_dunns$dunn)
dunn_ward_all <- data.frame("2_clusters" = ward_2_dunns$dunn,
"3_clusters" = ward_3_dunns$dunn,
"4_clusters" = ward_4_dunns$dunn)
dunn_ward_all
colnames(dunn_ward_all)
colnames(dunn_ward_all) <- c("2 Clusters", "3 Clusters", "4 Clusters")
dunn_ward_all
plot(hc_ward, cex = 0.6)
rect.hclust(hc_ward, k = 3, border = 2:5)
fviz_cluster(list(data = health, cluster = sub_grp1))
# DIVISIVE CLUSTERING
hc_divisive <- diana(health)
hc_divisive$dc # amount of clustering structure found
pltree(hc_divisive, cex = 0.6, hang = -1, main = "Dendrogram for Divisive Clustering")
plot(hc4, cex = 0.6, hang = -1)
plot(hc4, cex = 0.6, hang = -1, main = "Cluster Dendogram (Ward)")
plot(hc_ward, cex = 0.6)
rect.hclust(hc_ward, k = 3, border = 2:5)
plot(hc_ward, cex = 0.6, main = "Cluster Dendogram (Ward)")
rect.hclust(hc_ward, k = 3, border = 2:5)
fviz_cluster(list(data = health, cluster = sub_grp1))
plot(hc_ward, cex = 0.6, main = "Cluster Dendogram (Ward)")
rect.hclust(hc_ward, k = 3, border = 2:5)
plot(hc1, cex = 0.6, hang = -1, main = "Cluster Dendogram (Average)")
plot(hc2, cex = 0.6, hang = -1, main = "Cluster Dendogram (Single)")
plot(hc3, cex = 0.6, hang = -1, main = "Cluster Dendogram (Complete)")
plot(hc4, cex = 0.6, hang = -1, main = "Cluster Dendogram (Ward)")
plot(hc_ward, cex = 0.6, main = "Cluster Dendogram (Ward)")
rect.hclust(hc_ward, k = 3, border = 2:5)
fviz_cluster(list(data = health, cluster = sub_grp1))
plot(hc_ward, cex = 0.6, main = "Cluster Dendogram (Ward)")
rect.hclust(hc_ward, k = 3, border = 2:5)
map_dbl(m, ac) # ward has the highest coefficient
# Agglomerative Hierarchical Clustering, EUCLIDEAN METHOD
# Dissimilarity matrix
d2 <- dist(quality_life_final, method = "manhattan")
# Hierarchical clustering different method
hc1_man <- hclust(d2, method = "complete" ) # complete linkage
hc2_man <- hclust(d2, method = "ward.D2" ) # ward
hc3_man <- hclust(d2, method = "average" ) # average
hc4_man <- hclust(d2, method = "single" ) # single
cluster_1_data
summary(anova_result2)
# Create an ANOVA boxplot
boxplot(Health_exp_pctGDP ~ sub_grp1, data = health,
col = "lightblue", # Set box colors
main = "ANOVA Boxplot", # Title of the plot
ylab = "Response Variable", # Label for the y-axis
xlab = "Group Variable") # Label for the x-axis
View(health)
summary(anova_result10)
summary(anova_result1)
# Create an ANOVA boxplot
boxplot(Health_exp_pctGDP ~ sub_grp1, data = health,
col = "lightblue", # Set box colors
main = "ANOVA Boxplot", # Title of the plot
ylab = "Health_exp_pctGDP", # Label for the y-axis
xlab = "Clusters") # Label for the x-axis
summary(anova_result2)
# Create an ANOVA boxplot
boxplot(Health_pctexp_public ~ sub_grp1, data = health,
col = "lightblue", # Set box colors
main = "ANOVA Boxplot", # Title of the plot
ylab = "Health_pctexp_public", # Label for the y-axis
xlab = "Clusters") # Label for the x-axis
summary(anova_result3)
summary(anova_result4)
summary(anova_result5)
summary(anova_result6)
# Create an ANOVA boxplot
boxplot(External_health_pctexp ~ sub_grp1, data = health,
col = "lightblue", # Set box colors
main = "ANOVA Boxplot", # Title of the plot
ylab = "External_health_pctexp", # Label for the y-axis
xlab = "Clusters") # Label for the x-axis
summary(anova_result7)
# Create an ANOVA boxplot
boxplot(Physicians ~ sub_grp1, data = health,
col = "lightblue", # Set box colors
main = "ANOVA Boxplot", # Title of the plot
ylab = "Physicians", # Label for the y-axis
xlab = "Clusters") # Label for the x-axis
summary(anova_result8)
# Create an ANOVA boxplot
boxplot(Nurse_midwife ~ sub_grp1, data = health,
col = "lightblue", # Set box colors
main = "ANOVA Boxplot", # Title of the plot
ylab = "Nurse_midwife", # Label for the y-axis
xlab = "Clusters") # Label for the x-axis
summary(anova_result9)
# Create an ANOVA boxplot
boxplot(Specialist_surgical ~ sub_grp1, data = health,
col = "lightblue", # Set box colors
main = "ANOVA Boxplot", # Title of the plot
ylab = "Specialist_surgical", # Label for the y-axis
xlab = "Clusters") # Label for the x-axis
summary(anova_result10)
# Create an ANOVA boxplot
boxplot(Birth_registration ~ sub_grp1, data = health,
col = "lightblue", # Set box colors
main = "ANOVA Boxplot", # Title of the plot
ylab = "Birth_registration", # Label for the y-axis
xlab = "Clusters") # Label for the x-axis
summary(anova_result11)
# Create an ANOVA boxplot
boxplot(Death_registration ~ sub_grp1, data = health,
col = "lightblue", # Set box colors
main = "ANOVA Boxplot", # Title of the plot
ylab = "Death_registration", # Label for the y-axis
xlab = "Clusters") # Label for the x-axis
View(Health_systems)
ggplot(health, aes(x = sub_grp1, y = Health_pctexp_oop)) +
geom_boxplot() +
labs(title = "ANOVA Boxplot", y = "Response Variable", x = "Group Variable") +
theme_minimal()
ggplot(health, aes(x = sub_grp1, y = Health_pctexp_oop)) +
geom_boxplot() +
labs(title = "ANOVA Boxplot", y = "Response Variable", x = "Group Variable") +
theme_minimal()
sub_grp1
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_pctexp_oop)) +
geom_boxplot() +
labs(title = "ANOVA Boxplot", y = "Response Variable", x = "Group Variable") +
theme_minimal()
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_pctexp_oop)) +
geom_boxplot() +
labs(title = "ANOVA Boxplot", y = "Response Variable", x = "Group Variable")
# Create an ANOVA boxplot
boxplot(Health_pctexp_oop ~ sub_grp1, data = health,
col = sub_grp1, # Set box colors
main = "ANOVA Boxplot", # Title of the plot
ylab = "Health_pctexp_oop", # Label for the y-axis
xlab = "Clusters") # Label for the x-axis
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_pctexp_oop)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(title = "ANOVA Boxplot", y = "Response Variable", x = "Group Variable")
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_pctexp_oop)) +
geom_boxplot((aes(fill = as.factor(sub_grp1), fill = "Clusters")))) +
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_pctexp_oop)) +
geom_boxplot((aes(fill = as.factor(sub_grp1), fill = "Clusters"))) +
labs(title = "ANOVA Boxplot", y = "Response Variable", x = "Group Variable")
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_pctexp_oop)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(title = "ANOVA Boxplot", y = "Response Variable", x = "Group Variable", fill = "Clusters")
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_pctexp_oop)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(title = "ANOVA Boxplot", y = "Response Variable", x = "Group Variable", fill = "Clusters") +
theme_classic()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_pctexp_oop)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(title = "ANOVA Boxplot", y = "Response Variable", x = "Group Variable", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_pctexp_oop)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Health_pctexp_oop", x = "Clusters", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_pctexp_oop)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Capita_exp_PPP", x = "Clusters", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Death_registration)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Death_registration", x = "Clusters", fill = "Clusters") +
theme_minimal()
summary(anova_result11)
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_exp_pctGDP)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Health_exp_pctGDP", x = "Clusters", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_pctexp_public)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Health_pctexp_public", x = "Clusters", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_pctexp_oop)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Health_pctexp_oop", x = "Clusters", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Health_exp_capita_USD)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Health_exp_capita_USD", x = "Clusters", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Capita_exp_PPP)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Capita_exp_PPP", x = "Clusters", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = External_health_pctexp)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "External_health_pctexp", x = "Clusters", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Physicians)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Physicians", x = "Clusters", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Nurse_midwife)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Nurse_midwife", x = "Clusters", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Specialist_surgical)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Specialist_surgical", x = "Clusters", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Birth_registration)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Birth_registration", x = "Clusters", fill = "Clusters") +
theme_minimal()
# Create an ANOVA boxplot
ggplot(health, aes(x = as.factor(sub_grp1), y = Death_registration)) +
geom_boxplot((aes(fill = as.factor(sub_grp1)))) +
labs(y = "Death_registration", x = "Clusters", fill = "Clusters") +
theme_minimal()
View(Health_systems)
subset(Health_systems, subset = World_Bank_Name == Peru | Panama)
subset(Health_systems, subset = World_Bank_Name == "Peru")
subset(Health_systems, subset = World_Bank_Name == "Peru" | World_Bank_Name == "Panama")
data.frame(subset(Health_systems, subset = World_Bank_Name == "Peru" | World_Bank_Name == "Panama"))
peru.panama <- data.frame(subset(Health_systems, subset = World_Bank_Name == "Peru" | World_Bank_Name == "Panama"))
View(peru.panama)
peru.panama <- data.frame(subset(Health_systems, subset = World_Bank_Name == "Peru" | World_Bank_Name == "Panama" | World_Bank_Name == "Trinidad and Tohago"))
peru.panama <- data.frame(subset(Health_systems, subset = World_Bank_Name == "Peru" | World_Bank_Name == "Panama" | World_Bank_Name == "Trinidad and Tohago"))
peru.panama <- data.frame(subset(Health_systems, subset = World_Bank_Name == "Peru" | World_Bank_Name == "Panama" | World_Bank_Name == "Trinidad and Tobago
"))
peru.panama <- data.frame(subset(Health_systems, subset = World_Bank_Name == "Peru" | World_Bank_Name == "Panama" | World_Bank_Name == "Trinidad and Tobago"))
Health_systems <- read_csv("Documents/DSMA/Seminar DSMA/Presentation - Application KNN/Datasets/2.12_Health_systems.csv")
library(readr)
X2208920_english_reviews <- read_csv("Downloads/2208920 english reviews.csv")
View(X2208920_english_reviews)
# state
state <- as.factor(ifelse(final_data2$is_CA == 1, "CA",
ifelse(final_data2$is_NY == 1, "NY",
ifelse(final_data2$is_MA == 1, "MA",
ifelse(final_data2$is_TX == 1, "TX",
ifelse(final_data2$is_otherstate == 1, "Other State", "Other State"))))))
# set up
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # set working directory
# install packages
if (!require("pacman")) install.packages("pacman")
p_load(caret, tidyverse, kableExtra, glmnet, performanceEstimation, class,
rpart, rattle, plyr, randomForest, rpart.plot, ggpubr) # load packages
# load dataset
data <- read_csv("startup data.csv")
data %>% is.na() %>% colSums() # check NAs per column
colnames(data)
# clean data by removing columns that has NAs
final_data <- data[,-c(1:14,23,40,47)] # remove all NAs column
final_data <- final_data[, which(colMeans(!is.na(final_data)) > 0.8)] # remove columns that has more than 80% NA
final_data %>% is.na() %>% colSums() # check NAs per column
final_data2 <- final_data %>%
mutate(age_first_milestone_year = ifelse(is.na(age_first_milestone_year),
0, age_first_milestone_year),
age_last_milestone_year = ifelse(is.na(age_last_milestone_year),
0, age_last_milestone_year))
final_data2 %>% is.na() %>% colSums() # check NAs per column
final_data2$status %>% str()
# change to factors for whether a startup is Acquired / Closed
final_data2$status <- mapvalues(final_data2$status,
from = c('acquired', 'closed'),
to = c(1,0)) # 1 = acquired, 0 = close
final_data2$status <- as.factor(final_data2$status) # change to factor for target variable
# state
state <- as.factor(ifelse(final_data2$is_CA == 1, "CA",
ifelse(final_data2$is_NY == 1, "NY",
ifelse(final_data2$is_MA == 1, "MA",
ifelse(final_data2$is_TX == 1, "TX",
ifelse(final_data2$is_otherstate == 1, "Other State", "Other State"))))))
# industry
industry <- as.factor(ifelse(final_data2$is_software == 1, "Software",
ifelse(final_data$is_web == 1, "Web",
ifelse(final_data2$is_mobile == 1, "Mobile",
ifelse(final_data2$is_enterprise == 1, "Enterprise",
ifelse(final_data2$is_advertising == 1, "Advertising",
ifelse(final_data$is_gamesvideo == 1, "Video Games",
ifelse(final_data$is_ecommerce == 1, "E-Commerce",
ifelse(final_data2$is_biotech == 1, "Biotech",
ifelse(final_data2$is_consulting == 1, "Consulting",
ifelse(final_data2$is_othercategory == 1, "Other Category",0)))))))))))
# add categorical factors
final_data2$industry <- industry
final_data2$state <- state
# remove one hot encoding
final_data2 <- final_data2[,-c(9:24)]
# divide train and test set, 70 -30 split #
set.seed(1000)
index <- createDataPartition(final_data2$status, p = .7, list = FALSE)
train <- final_data2[ index,]
test  <- final_data2[-index,]
set.seed(1000)
logistic_model <- glm(status ~ .,
data = train,
family = binomial)
predictions.log <- predict(logistic_model, newdata = test, type = "response")
predictions.log <- as.factor(ifelse(predictions.log > 0.5, "1", "0"))
confmatrix.log <- confusionMatrix(predictions.log, test$status, positive = "1", mode = 'everything')
print(confmatrix.log) # confusion matrix
train$status %>% table()
